create or replace database JIRA_HEVO;

create or replace schema PUBLIC;

create or replace TABLE JIRA_BOARD (
	ID NUMBER(38,0) NOT NULL,
	NAME VARCHAR(16777216),
	TYPE VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_BOARD_ISSUE (
	BOARD_ID NUMBER(38,0) NOT NULL,
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (BOARD_ID, ISSUE_ID),
	foreign key (BOARD_ID) references JIRA_HEVO.PUBLIC.JIRA_BOARD(ID)
);
create or replace TABLE JIRA_BOARD_PROJECT (
	BOARD_ID NUMBER(38,0) NOT NULL,
	PROJECT_ID VARCHAR(16777216) NOT NULL,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (BOARD_ID, PROJECT_ID),
	foreign key (BOARD_ID) references JIRA_HEVO.PUBLIC.JIRA_BOARD(ID)
);
create or replace TABLE JIRA_COMPONENT (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	IS_ASSIGNEE_TYPE_VALID BOOLEAN,
	PROJECT_ID VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	DESCRIPTION VARCHAR(16777216),
	primary key (ID)
);
create or replace TABLE JIRA_ISSUE (
	ID VARCHAR(16777216) NOT NULL,
	KEY VARCHAR(16777216),
	ISSUE_TYPE_ID VARCHAR(16777216),
	ISSUE_TYPE_NAME VARCHAR(16777216),
	PROJECT_ID VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	SUMMARY VARCHAR(16777216),
	PRIORITY_ID VARCHAR(16777216),
	RESOLUTION_ID VARCHAR(16777216),
	PARENT_ISSUE_ID VARCHAR(16777216),
	RESOLUTION_DATE TIMESTAMP_NTZ(9),
	STATUS_ID VARCHAR(16777216),
	STATUS_NAME VARCHAR(16777216),
	WORK_RATIO NUMBER(38,0),
	ASSIGNEE_ACCOUNT_ID VARCHAR(16777216),
	CREATOR_ACCOUNT_ID VARCHAR(16777216),
	REPORTER_ACCOUNT_ID VARCHAR(16777216),
	CREATED TIMESTAMP_NTZ(9),
	UPDATED TIMESTAMP_NTZ(9),
	WATCHES_IS_WATCHING BOOLEAN,
	WATCHES_WATCH_COUNT NUMBER(38,0),
	VOTES_VOTES NUMBER(38,0),
	VOTES_HAS_VOTED BOOLEAN,
	PROGRESS_PROGRESS NUMBER(38,0),
	PROGRESS_TOTAL NUMBER(38,0),
	AGGREGATE_PROGRESS_PROGRESS NUMBER(38,0),
	AGGREGATE_PROGRESS_TOTAL NUMBER(38,0),
	STATUS_CATEGORY_CHANGE_DATE TIMESTAMP_NTZ(9),
	CUSTOM_SPRINT VARIANT,
	CUSTOM_RANK VARCHAR(16777216),
	CUSTOM_CHART_TIME_IN_STATUS VARCHAR(16777216),
	CUSTOM_PARENT_LINK VARIANT,
	CUSTOM_ISSUE_RATING VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	CUSTOM_CHART_DATE_OF_FIRST_RESPONSE TIMESTAMP_NTZ(9),
	DUE_DATE TIMESTAMP_NTZ(9),
	CUSTOM_START_DATE TIMESTAMP_NTZ(9),
	CUSTOM_EPIC_NAME VARCHAR(16777216),
	CUSTOM_STORY_POINT_ESTIMATE NUMBER(38,1),
	CUSTOM_EPIC_LINK VARCHAR(16777216),
	TIME_SPENT NUMBER(38,0),
	AGGREGATE_TIME_SPENT NUMBER(38,0),
	TIME_ESTIMATE NUMBER(38,0),
	AGGREGATE_TIME_ESTIMATE NUMBER(38,0),
	TIME_ORIGINAL_ESTIMATE NUMBER(38,0),
	CUSTOM_STORY_POINTS NUMBER(38,1),
	CUSTOM_EPIC_COLOR VARCHAR(16777216),
	CUSTOM_EPIC_STATUS VARIANT,
	CUSTOM_ISSUE_COLOR VARCHAR(16777216),
	CUSTOM_FLAGGED VARIANT,
	CUSTOM_EXTERNAL_ISSUE_ID VARCHAR(16777216),
	CUSTOM_TARGET_END TIMESTAMP_NTZ(9),
	CUSTOMFIELD_10237 VARCHAR(16777216),
	CUSTOMFIELD_10233 VARCHAR(16777216),
	CUSTOMFIELD_10235 VARCHAR(16777216),
	CUSTOM_TYPE VARIANT,
	CUSTOM_IMPACT VARCHAR(16777216),
	CUSTOM_MITIGATION VARCHAR(16777216),
	CUSTOM_CATEGORY VARIANT,
	ENVIRONMENT VARCHAR(16777216),
	primary key (ID)
);
create or replace TABLE JIRA_ISSUE_CHANGELOG (
	ID VARCHAR(16777216) NOT NULL,
	ISSUE_ID VARCHAR(16777216),
	AUTHOR_ACCOUNT_ID VARCHAR(16777216),
	CREATED TIMESTAMP_NTZ(9),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_ISSUE_CHANGE_DETAILS (
	CHANGELOG_ID VARCHAR(16777216) NOT NULL,
	FIELD VARCHAR(16777216) NOT NULL,
	FIELD_ID VARCHAR(16777216),
	"FROM" VARCHAR(16777216),
	FROM_STRING VARCHAR(16777216),
	"TO" VARCHAR(16777216),
	TO_STRING VARCHAR(16777216),
	FIELDTYPE VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (CHANGELOG_ID, FIELD)
);
create or replace TABLE JIRA_ISSUE_COMMENT (
	ID VARCHAR(16777216) NOT NULL,
	ISSUE_ID VARCHAR(16777216),
	AUTHOR_ACCOUNT_ID VARCHAR(16777216),
	UPDATE_AUTHOR_ACCOUNT_ID VARCHAR(16777216),
	BODY VARCHAR(16777216),
	CREATED TIMESTAMP_NTZ(9),
	UPDATED TIMESTAMP_NTZ(9),
	JSD_PUBLIC BOOLEAN,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID),
	foreign key (AUTHOR_ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID),
	foreign key (AUTHOR_ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID),
	foreign key (UPDATE_AUTHOR_ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID)
);
create or replace TABLE JIRA_ISSUE_FIX_VERSION (
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	FIX_VERSION_ID VARCHAR(16777216) NOT NULL,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ISSUE_ID, FIX_VERSION_ID)
);
create or replace TABLE JIRA_ISSUE_LABEL (
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	LABEL VARCHAR(16777216) NOT NULL,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ISSUE_ID, LABEL)
);
create or replace TABLE JIRA_ISSUE_LINK (
	ID VARCHAR(16777216) NOT NULL,
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	ISSUE_LINK_TYPE_ID VARCHAR(16777216),
	LINKED_ISSUE_ID VARCHAR(16777216),
	DIRECTION VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID, ISSUE_ID)
);
create or replace TABLE JIRA_ISSUE_LINK_TYPE (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	INWARD VARCHAR(16777216),
	OUTWARD VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_ISSUE_SUBTASK (
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	SUBTASK_ISSUE_ID VARCHAR(16777216) NOT NULL,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ISSUE_ID, SUBTASK_ISSUE_ID)
);
create or replace TABLE JIRA_ISSUE_TYPE (
	ID VARCHAR(16777216) NOT NULL,
	DESCRIPTION VARCHAR(16777216),
	NAME VARCHAR(16777216),
	SUBTASK BOOLEAN,
	PROJECT_ID VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_ISSUE_WATCHER (
	ISSUE_ID VARCHAR(16777216) NOT NULL,
	ACCOUNT_ID VARCHAR(16777216) NOT NULL,
	DISPLAY_NAME VARCHAR(16777216),
	ACTIVE BOOLEAN,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ISSUE_ID, ACCOUNT_ID),
	foreign key (ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID)
);
create or replace TABLE JIRA_ISSUE_WORKLOG (
	ID VARCHAR(16777216) NOT NULL,
	ISSUE_ID VARCHAR(16777216),
	AUTHOR_ACCOUNT_ID VARCHAR(16777216),
	UPDATE_AUTHOR_ACCOUNT_ID VARCHAR(16777216),
	COMMENT VARCHAR(16777216),
	CREATED TIMESTAMP_NTZ(9),
	UPDATED TIMESTAMP_NTZ(9),
	STARTED TIMESTAMP_NTZ(9),
	TIME_SPENT VARCHAR(16777216),
	TIME_SPENT_SECONDS NUMBER(38,0),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID),
	foreign key (AUTHOR_ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID),
	foreign key (UPDATE_AUTHOR_ACCOUNT_ID) references JIRA_HEVO.PUBLIC.JIRA_USER(ACCOUNT_ID)
);
create or replace TABLE JIRA_PRIORITY (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_PROJECT (
	ID VARCHAR(16777216) NOT NULL,
	KEY VARCHAR(16777216),
	LEAD_ACCOUNT_ID VARCHAR(16777216),
	ASSIGNEE_TYPE VARCHAR(16777216),
	NAME VARCHAR(16777216),
	ROLES VARIANT,
	PROJECT_TYPE_KEY VARCHAR(16777216),
	SIMPLIFIED BOOLEAN,
	STYLE VARCHAR(16777216),
	IS_PRIVATE BOOLEAN,
	UUID VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	DESCRIPTION VARCHAR(16777216),
	PROJECT_CATEGORY_ID VARCHAR(16777216),
	primary key (ID)
);
create or replace TABLE JIRA_PROJECT_CATEGORY (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_RESOLUTION (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_SPRINT (
	ID NUMBER(38,0) NOT NULL,
	NAME VARCHAR(16777216),
	STATE VARCHAR(16777216),
	ORIGIN_BOARD_ID NUMBER(38,0),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	START_DATE TIMESTAMP_NTZ(9),
	END_DATE TIMESTAMP_NTZ(9),
	COMPLETE_DATE TIMESTAMP_NTZ(9),
	GOAL VARCHAR(16777216),
	primary key (ID)
);
create or replace TABLE JIRA_STATUS (
	ID VARCHAR(16777216) NOT NULL,
	NAME VARCHAR(16777216),
	STATUS_CATEGORY_ID NUMBER(38,0),
	PROJECT_ID VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_STATUS_CATEGORY (
	ID NUMBER(38,0) NOT NULL,
	KEY VARCHAR(16777216),
	NAME VARCHAR(16777216),
	COLOR_NAME VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	primary key (ID)
);
create or replace TABLE JIRA_USER (
	ACCOUNT_ID VARCHAR(16777216) NOT NULL,
	ACCOUNT_TYPE VARCHAR(16777216),
	DISPLAY_NAME VARCHAR(16777216),
	ACTIVE BOOLEAN,
	LOCALE VARCHAR(16777216),
	TIME_ZONE VARCHAR(16777216),
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	EMAIL_ADDRESS VARCHAR(16777216),
	primary key (ACCOUNT_ID)
);
create or replace TABLE JIRA_VERSION (
	ID VARCHAR(16777216) NOT NULL,
	DESCRIPTION VARCHAR(16777216),
	NAME VARCHAR(16777216),
	ARCHIVED BOOLEAN,
	RELEASED BOOLEAN,
	RELEASE_DATE TIMESTAMP_NTZ(9),
	USER_RELEASE_DATE VARIANT,
	PROJECT_ID NUMBER(38,0),
	START_DATE TIMESTAMP_NTZ(9),
	USER_START_DATE VARIANT,
	__HEVO__INGESTED_AT NUMBER(38,0),
	__HEVO__LOADED_AT NUMBER(38,0),
	OVERDUE BOOLEAN,
	primary key (ID)
);

CREATE VIEW JIRA_CHANGELOG_FLAT AS 
SELECT cl.*,cld."FIELD",cld."FIELD_ID",cld."FROM" AS "FROM_VALUE",cld."FROM_STRING", 
cld."TO" AS "TO_VALUE", cld."TO_STRING",cld."FIELDTYPE",u."DISPLAY_NAME" AS "AUTHOR" 
FROM "JIRA_ISSUE_CHANGELOG" cl
LEFT JOIN "JIRA_ISSUE_CHANGE_DETAILS" cld ON cl."ID"=cld."CHANGELOG_ID"
LEFT JOIN "JIRA_USER" u ON cl."AUTHOR_ACCOUNT_ID"=u."ACCOUNT_ID";


CREATE VIEW JIRA_INTERPROJECT_DEPENDANCIES AS
SELECT "LINK_TYPE_NAME","DIRECTION", "ISSUE_ID", "LINKED_ISSUE_ID", I."KEY" AS "ISSUE_KEY", I2."KEY" AS "LINKED_ISSUE_KEY" 
,I."STATUS_CATEGORY_NAME" AS "ISSUE_STATUS_CATEGORY_NAME",I2."STATUS_CATEGORY_NAME" AS "LINKED_ISSUE_STATUS_CATEGORY_NAME"
FROM "JIRA_LINK_FLAT" AS IL LEFT JOIN "JIRA_ISSUE_FLAT" AS I ON IL."ISSUE_ID"=I."ID"
LEFT JOIN "JIRA_ISSUE_FLAT" AS I2 ON IL."LINKED_ISSUE_ID"=I2."ID" 
WHERE "LINK_TYPE_NAME" IN ('Relates','Blocks') AND SPLIT_PART(ISSUE_KEY, '-', 1)!=SPLIT_PART(LINKED_ISSUE_KEY, '-', 1) AND DIRECTION = 'OUTWARD'
AND (I.STATUS_CATEGORY_NAME!='Done' AND I2.STATUS_CATEGORY_NAME!='Done');


CREATE VIEW JIRA_ISSUE_CURRENT_STATUS AS
SELECT MAX (ROW_COUNTER) AS ROW_COUNTER,ISSUE_ID, TO_STATUS AS "CURRENT_STATUS",END_DATE AS "DATE_UPDATED" FROM "JIRA_ISSUE_STATUS_CHANGE" 
GROUP BY ISSUE_ID, TO_STATUS,END_DATE;


CREATE VIEW JIRA_ISSUE_FLAT AS 
SELECT i.*,sc."NAME" AS "STATUS_CATEGORY_NAME",p."NAME" AS "PRIORITY_NAME", r."NAME" AS "RESOLUTION_NAME",
au."DISPLAY_NAME" AS "ASSIGNEE", cu."DISPLAY_NAME" AS "CREATOR", ru."DISPLAY_NAME" AS "REPORTER"
FROM "JIRA_HEVO"."PUBLIC"."JIRA_ISSUE" i 
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_STATUS" s ON i."STATUS_ID" = s."ID" 
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_STATUS_CATEGORY" sc ON s."STATUS_CATEGORY_ID" = sc."ID" 
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_PRIORITY" p ON i."PRIORITY_ID" = p."ID"
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_RESOLUTION" r ON i."RESOLUTION_ID" = r."ID"
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_USER" au ON i."ASSIGNEE_ACCOUNT_ID"=au."ACCOUNT_ID"
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_USER" cu ON i."CREATOR_ACCOUNT_ID"=cu."ACCOUNT_ID"
LEFT JOIN "JIRA_HEVO"."PUBLIC"."JIRA_USER" ru ON i."REPORTER_ACCOUNT_ID"=ru."ACCOUNT_ID";


CREATE VIEW JIRA_ISSUE_STATUS_CHANGE AS
SELECT ISC.ROW_COUNTER, ISC.ISSUE_ID,ISC."From_Status" AS "FROM_STATUS", ISC."To_Status" AS "TO_STATUS",ISC."End_Date" AS "END_DATE",ISC2."End_Date" AS "START_DATE" 
FROM "JIRA_ISSUE_STATUS_CHANGE_INT3" AS ISC 
LEFT JOIN "JIRA_ISSUE_STATUS_CHANGE_INT3" AS ISC2 ON ISC.PREVIOUS_ROW=ISC2.ROW_COUNTER
WHERE "FROM_STATUS" !='Created'
UNION 
SELECT ISC.ROW_COUNTER, ISC.ISSUE_ID,ISC."From_Status" AS "FROM_STATUS", ISC."To_Status" AS "TO_STATUS",ISC."End_Date" AS "END_DATE",ISC."Start_Date" AS "START_DATE" 
FROM "JIRA_ISSUE_STATUS_CHANGE_INT3" AS ISC 
LEFT JOIN "JIRA_ISSUE_STATUS_CHANGE_INT3" AS ISC2 ON ISC.PREVIOUS_ROW=ISC2.ROW_COUNTER
WHERE "FROM_STATUS" ='Created'
order by "ROW_COUNTER";


CREATE VIEW JIRA_ISSUE_STATUS_CHANGE_INT1 AS
SELECT DISTINCT I."ID" AS "ISSUE_ID", 'Created' AS "From_Status", 'To Do' AS "To_Status",I."CREATED" AS "Start_Date", I."CREATED" AS "End_Date"
  FROM "JIRA_ISSUE_FLAT" AS I 
      union 
      -- ... and work our way down one level at a time.
      select ICL2."ISSUE_ID" AS "ISSUE_ID", 
             ICL2."FROM_STRING" AS "From_Status", 
             ICL2."TO_STRING" AS "To_Status", 
             null as "Start_Date", 
             ICL2."CREATED" as "End_Date"
        from "JIRA_CHANGELOG_FLAT" AS ICL2 
        WHERE "FIELD"='status'
        order by "ISSUE_ID", "End_Date";


CREATE VIEW JIRA_ISSUE_STATUS_CHANGE_INT2 AS
SELECT ROW_NUMBER() OVER (ORDER BY "ISSUE_ID", "End_Date" ASC) AS "ROW_COUNTER",* from "JIRA_ISSUE_STATUS_CHANGE_INT1";


CREATE VIEW JIRA_ISSUE_STATUS_CHANGE_INT3 AS 
SELECT *,ROW_COUNTER-1 AS PREVIOUS_ROW  from "JIRA_ISSUE_STATUS_CHANGE_INT2";


CREATE VIEW JIRA_ISSUE_TYPE_CHANGES AS
SELECT -1 AS ROW_COUNTER, ID AS "ISSUE_ID", 'Story' AS "CURRENT_ISSUE_TYPE",CURRENT_TIMESTAMP AS "ISSUE_TYPE_DATE_CREATED" 
FROM "JIRA_ISSUE_FLAT" WHERE ISSUE_ID NOT IN(SELECT DISTINCT ISSUE_ID FROM "JIRA_CHANGELOG_FLAT" WHERE "FIELD"='issuetype')
UNION
SELECT * FROM "JIRA_ISSUE_TYPE_CHANGES_INT2";


CREATE VIEW JIRA_ISSUE_TYPE_CHANGES_INT1 AS
SELECT ICL2."ISSUE_ID" AS "ISSUE_ID", 
             ICL2.FROM_STRING AS "FROM_ISSUE_TYPE", 
             ICL2.TO_STRING AS "TO_ISSUE_TYPE", 
             ICL2.CREATED as "END_DATE",
             ROW_NUMBER() OVER (ORDER BY ICL2.ISSUE_ID, ICL2.CREATED ASC) AS "ROW_COUNTER"
        FROM "JIRA_CHANGELOG_FLAT" AS ICL2 
        WHERE "FIELD"='issuetype'
        ORDER BY ISSUE_ID, CREATED;


CREATE VIEW JIRA_ISSUE_TYPE_CHANGES_INT2 AS
SELECT MAX ("ROW_COUNTER") as "ROW_COUNTER","ISSUE_ID","TO_ISSUE_TYPE" AS "CURRENT_ISSUE_TYPE", "END_DATE" AS "ISSUE_TYPE_DATE_CREATED" 
FROM "JIRA_ISSUE_TYPE_CHANGES_INT1" GROUP BY ISSUE_ID, "TO_ISSUE_TYPE", "END_DATE";


CREATE VIEW JIRA_LINK_FLAT AS 
SELECT l.*,lt."NAME" AS "LINK_TYPE_NAME", lt."INWARD", lt."OUTWARD",
i."KEY" AS "ISSUE_KEY", li."KEY" AS "LINKED_ISSUE_KEY"
FROM "JIRA_ISSUE_LINK" l
LEFT JOIN "JIRA_ISSUE_LINK_TYPE" lt
ON l."ISSUE_LINK_TYPE_ID" = lt."ID"
LEFT JOIN "JIRA_ISSUE" i
ON l."ISSUE_ID"=i."ID"
LEFT JOIN "JIRA_ISSUE" li
ON l."LINKED_ISSUE_ID" = li."ID";


CREATE VIEW JIRA_PROJECT_FLAT AS 
SELECT p.*,pc."NAME" AS "PROJECT_CATEGORY_NAME", u."DISPLAY_NAME" AS "LEAD_USER"
FROM "JIRA_PROJECT" p 
LEFT JOIN "JIRA_PROJECT_CATEGORY" pc ON p."PROJECT_CATEGORY_ID" = pc."ID" 
LEFT JOIN "JIRA_USER" u ON p."LEAD_ACCOUNT_ID"=u."ACCOUNT_ID";